{
    "name": "notter-backend",
    "dockerComposeFile": "docker-compose.yml",
    "service": "devcontainer",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    "remoteUser": "vscode",
    "containerEnv": {
        "PDM_IGNORE_ACTIVE_VENV": "1",
        "DATABASE_URL": "postgres://admin:admin@postgres:5432/notter",
        "JWT_SECRET_KEY": "cf17aacdb4f5eb3905e1f777bae8e9d23b9724ccfe2ae114c5271e26548e14ea0e0bdba86cdbeb3db3e1d0438f429a7ea88cc42dd8c20ac081432e3fcf2a6454",
        "JWT_ALGORITHM": "HS512",
        "JWT_EXPIRATION_TIME_MINUTES": "10",
        "SERVER_HOST": "127.0.0.1",
        "SERVER_PORT": "8000",
        "SERVER_RELOAD": "true",
        "ENV": "dev"
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "codeium.codeium",
                "ms-python.mypy-type-checker",
                "charliermarsh.ruff",
                "EditorConfig.EditorConfig",
                "tamasfe.even-better-toml",
                "natqe.reload",
                "cweijan.vscode-postgresql-client2@7.3.8",
                "ms-vscode.live-server"
            ],
            "settings": {
                "http.proxyStrictSSL": false,
                "terminal.integrated.fontFamily": "Roboto Mono for Powerline",
                "python.defaultInterpreterPath": ".venv/bin/python",
                "python.terminal.activateEnvironment": false,
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "python.testing.unittestEnabled": false,
                "python.testing.pytestEnabled": true,
                "testing.showAllMessages": true,
                "mypy-type-checker.importStrategy": "fromEnvironment",
                "files.exclude": {
                    "**/__pycache__": true
                },
                "[python]": {
                    "editor.defaultFormatter": "charliermarsh.ruff",
                    "editor.formatOnSave": true,
                    "editor.codeActionsOnSave": {
                        "source.fixAll": "explicit",
                        "source.organizeImports": "explicit"
                    }
                }
            }
        }
    },
    "updateContentCommand": "pdm install"
}
